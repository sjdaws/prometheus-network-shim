---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-network-shim
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-network-shim
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-network-shim
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: prometheus-network-shim
  namespace: monitoring
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: prometheus-network-shim
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: prometheus-network-shim
      version: v1
  template:
    metadata:
      labels:
        app: prometheus-network-shim
        version: v1
    spec:
      containers:
      - args:
        - --node-name
        - $(NODE_NAME)
        command:
        - /usr/bin/prometheus-network-shim
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.io/sjdaws/prometheus-network-shim:develop
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 5
          periodSeconds: 5
        name: prometheus-network-shim
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /rootfs
          name: rootfs
          readOnly: true
      hostNetwork: true
      serviceAccountName: prometheus-network-shim
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /
          type: Directory
        name: rootfs
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    service: prometheus-network-shim
  name: prometheus-network-shim
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: prometheus-network-shim
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-network-shim
  namespace: monitoring
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    name: prometheus-network-shim
    release: kube-prometheus-stack
  name: prometheus-network-shim
  namespace: monitoring
spec:
  endpoints:
  - honorLabels: true
    interval: 10s
    port: metrics
  namespaceSelector:
    matchNames:
    - monitoring
  selector:
    matchLabels:
      service: prometheus-network-shim
